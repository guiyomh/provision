- name: Set Docker config file [Debian]
  set_fact:
    docker_conf_file: /etc/default/docker
  when: ansible_os_family == 'Debian'

- name: Set Docker config file [RedHat]
  set_fact:
    docker_conf_file: /etc/sysconfig/docker
  when: ansible_os_family == 'RedHat'

- name: Configure Docker Service (1/2) [RedHat]
  lineinfile:
    dest: '/usr/lib/systemd/system/docker.service'
    insertbefore: '^ExecStart'
    regexp: '^#?EnvironmentFile\='
    line: 'EnvironmentFile=-/etc/sysconfig/docker'
  when: ansible_os_family == 'RedHat'

- name: Configure Docker Service (2/2) [RedHat]
  lineinfile:
    dest: '/usr/lib/systemd/system/docker.service'
    regexp: '^#?ExecStart\='
    line: 'ExecStart=/usr/bin/docker daemon $DOCKER_OPTS'
  when: ansible_os_family == 'RedHat'
  #ExecStart=/usr/bin/docker daemon -H fd://

- name: Create Docker config file
  file: path={{ docker_conf_file }} state=touch mode=0644

- name: Configure docker
  lineinfile:
    dest: '{{ docker_conf_file }}'
    regexp: '^#?DOCKER_OPTS\='
    line: 'DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock {{ DOCKER.opts }}"'
    state: present
  notify:
    - Restart Docker
  
- name: Add "{{ DEPLOY.username }}" user to docker group
  user: name={{ DEPLOY.username }} groups=docker append=yes

- name: Add "root" user to docker group
  user: name=root groups=docker append=yes
  
- name: Create /opt/docker/bin/ directory
  file:
    dest:  /opt/docker/bin/
    owner: "{{ DEPLOY.username }}"
    group: "{{ DEPLOY.username }}"
    mode:  0777
    state: directory

- name: Deploy docker bin files
  synchronize:
    rsync_path: "sudo rsync"
    src: roles/docker/files/bin/
    dest: /opt/docker/bin/
    delete: no

- name: Install docker-compose
  pip:
    name: docker-compose
    state: latest

- name: Fix rights
  file:
    path: '{{ item.path }}'
    state: '{{ item.state }}'
    owner: "{{ DEPLOY.username }}"
    group: "{{ DEPLOY.username }}"
    mode: '{{ item.mode }}'
  with_items:
   - { path: '/opt/docker/bin/compose-wrapper.sh', state : 'file', mode: '0777' }

- name: Add symlinks
  file:
    src:  '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: 'link'
    owner: "{{ DEPLOY.username }}"
    group: "{{ DEPLOY.username }}"
    mode: '0777'
    force: yes
  with_items:
   - { src: '/opt/docker/bin/compose-wrapper.sh',   dest: '/usr/local/bin/dcc' }

#############################
# Apparmor profile
#############################

# - name: Fix AppArmor profile
#   lineinfile:
#     dest:        '/etc/apparmor.d/docker'
#     insertafter: '[\s]*capability'
#     line:        '  ptrace peer=docker-default,'
#     state:       present
#   notify:
#     - Reload AppArmor

- name: Deploy docker bin files
  synchronize:
    rsync_path: "sudo rsync"
    src: roles/docker/files/profile.d/
    dest: /etc/profile.d/
    delete: no

- name: Configure docker clean dangling images cronjob
  cron:
    name: docker clean dangling images
    job: /usr/bin/docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
    minute: 00
    hour: 3

- name: Configure docker clean exited container cronjob
  cron:
    name: docker clean exited container
    job: /usr/bin/docker rm $(docker ps -a -q -f status=exited)
    minute: 30
    hour: 2
    day: '*/5'
